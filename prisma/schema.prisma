generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Users {
  id         Int     @id @default(autoincrement())
  username   String? @unique
  email      String? @unique
  mobile     String? @unique
  facebookId String?
  googleId   String?
  lineId     String?
  password   String?
  location   String?
  isActive   Boolean @default(true)
  banCount   Int     @default(0)
  role       Role    @default(user)
}

model Resevations {
  id          Int      @id @default(autoincrement())
  userId      Int
  shopId      Int
  branchId    Int
  queueNumber Int
  status      Status
  createdAt   DateTime @default(now())

  @@index([branchId], map: "Resevations_branchId_fkey")
  @@index([shopId], map: "Resevations_shopId_fkey")
  @@index([userId], map: "Resevations_userId_fkey")
}

model Shops {
  id                  Int               @id @default(autoincrement())
  registerationNumber String
  registertionPic     String
  name                String?
  email               String?           @unique
  address             String?
  shopMobile          String?
  openingTimes        String?
  closeingTimes       String?
  currentQueueNumber  Int?
  picture             String?
  priceRange          Shops_priceRange?
  isOpen              Boolean           @default(true)
  isApprove           is_approve        @default(pending)
  shopAccountId       Int

  @@index([shopAccountId], map: "Shops_shopAccountId_fkey")
}

model ShopAccount {
  id        Int     @id @default(autoincrement())
  email     String  @unique
  password  String
  firstName String?
  lastName  String?
  mobile    String?
  idNumber  String?
  idCard    String?
  role      String  @default("vendor")
}

model Categories {
  id     Int    @id @default(autoincrement())
  typeId Int
  shopId Int
  name   String

  @@index([shopId], map: "Categories_shopId_fkey")
  @@index([typeId], map: "Categories_typeId_fkey")
}

model Branchs {
  id     Int    @id @default(autoincrement())
  shopId Int
  name   String

  @@index([shopId], map: "Branchs_shopId_fkey")
}

model Location {
  id       Int    @id @default(autoincrement())
  branchId Int
  lat      String
  long     String

  @@index([branchId], map: "Location_branchId_fkey")
}

model Type {
  id              Int               @id @default(autoincrement())
  name            String
  id              Int               @id @default(autoincrement())
  name            String
  ShopsCategories ShopsCategories[]
}

enum Role {
  user
  admin
}

enum Status {
  pending
  accepted
  cancelled
}

enum is_approve {
  pending
  approved
  rejected
}

enum Shops_priceRange {
  cheap
  middle
  expensive
}
